"""Add diet tables

Revision ID: a6cc5b6978f4
Revises: 51096cdce971
Create Date: 2024-08-18 11:47:44.538368

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a6cc5b6978f4'
down_revision: Union[str, None] = '51096cdce971'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('diet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_diet_archived'), 'diet', ['archived'], unique=False)
    op.create_index(op.f('ix_diet_name'), 'diet', ['name'], unique=False)
    op.create_table('dietconfigurationversion',
    sa.Column('diet_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['diet_id'], ['diet.id'], ),
    sa.PrimaryKeyConstraint('diet_id', 'version')
    )
    op.create_index(op.f('ix_dietconfigurationversion_archived'), 'dietconfigurationversion', ['archived'], unique=False)
    op.create_table('dietoutputversion',
    sa.Column('diet_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['diet_id'], ['diet.id'], ),
    sa.PrimaryKeyConstraint('diet_id', 'version')
    )
    op.create_index(op.f('ix_dietoutputversion_archived'), 'dietoutputversion', ['archived'], unique=False)
    op.create_table('dietprofileconfiguration',
    sa.Column('diet_id', sa.Integer(), nullable=False),
    sa.Column('configuration_version', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['diet_id'], ['diet.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['profile.id'], ),
    sa.PrimaryKeyConstraint('diet_id', 'configuration_version', 'profile_id')
    )
    op.create_index(op.f('ix_dietprofileconfiguration_archived'), 'dietprofileconfiguration', ['archived'], unique=False)
    op.create_index(op.f('ix_dietprofileconfiguration_order'), 'dietprofileconfiguration', ['order'], unique=False)
    op.create_table('dietingredientoutput',
    sa.Column('diet_id', sa.Integer(), nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('unit_id', sa.String(), nullable=False),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['diet_id'], ['diet.id'], ),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredient.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('diet_id', 'ingredient_id', 'version')
    )
    op.create_index(op.f('ix_dietingredientoutput_archived'), 'dietingredientoutput', ['archived'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_dietingredientoutput_archived'), table_name='dietingredientoutput')
    op.drop_table('dietingredientoutput')
    op.drop_index(op.f('ix_dietprofileconfiguration_order'), table_name='dietprofileconfiguration')
    op.drop_index(op.f('ix_dietprofileconfiguration_archived'), table_name='dietprofileconfiguration')
    op.drop_table('dietprofileconfiguration')
    op.drop_index(op.f('ix_dietoutputversion_archived'), table_name='dietoutputversion')
    op.drop_table('dietoutputversion')
    op.drop_index(op.f('ix_dietconfigurationversion_archived'), table_name='dietconfigurationversion')
    op.drop_table('dietconfigurationversion')
    op.drop_index(op.f('ix_diet_name'), table_name='diet')
    op.drop_index(op.f('ix_diet_archived'), table_name='diet')
    op.drop_table('diet')
    # ### end Alembic commands ###
