"""Add diet output tables

Revision ID: 2407e2cea5ec
Revises: a6cc5b6978f4
Create Date: 2024-08-24 17:19:40.577486

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2407e2cea5ec'
down_revision: Union[str, None] = 'a6cc5b6978f4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dietsummaryoutput',
    sa.Column('diet_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('cost_unit_id', sa.String(), nullable=True),
    sa.Column('gross_energy', sa.Float(), nullable=True),
    sa.Column('gross_energy_unit_id', sa.String(), nullable=True),
    sa.Column('digestible_energy', sa.Float(), nullable=True),
    sa.Column('digestible_energy_unit_id', sa.String(), nullable=True),
    sa.Column('metabolizable_energy', sa.Float(), nullable=True),
    sa.Column('metabolizable_energy_unit_id', sa.String(), nullable=True),
    sa.Column('net_energy', sa.Float(), nullable=True),
    sa.Column('net_energy_unit_id', sa.String(), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cost_unit_id'], ['unit.id'], ),
    sa.ForeignKeyConstraint(['diet_id'], ['diet.id'], ),
    sa.ForeignKeyConstraint(['digestible_energy_unit_id'], ['unit.id'], ),
    sa.ForeignKeyConstraint(['gross_energy_unit_id'], ['unit.id'], ),
    sa.ForeignKeyConstraint(['metabolizable_energy_unit_id'], ['unit.id'], ),
    sa.ForeignKeyConstraint(['net_energy_unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('diet_id', 'version')
    )
    op.create_index(op.f('ix_dietsummaryoutput_archived'), 'dietsummaryoutput', ['archived'], unique=False)
    op.create_table('dietingredientnutrientoutput',
    sa.Column('diet_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('nutrient_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('amount_unit_id', sa.String(), nullable=False),
    sa.Column('gross_energy', sa.Float(), nullable=True),
    sa.Column('gross_energy_unit_id', sa.String(), nullable=True),
    sa.Column('digestible_energy', sa.Float(), nullable=True),
    sa.Column('digestible_energy_unit_id', sa.String(), nullable=True),
    sa.Column('metabolizable_energy', sa.Float(), nullable=True),
    sa.Column('metabolizable_energy_unit_id', sa.String(), nullable=True),
    sa.Column('net_energy', sa.Float(), nullable=True),
    sa.Column('net_energy_unit_id', sa.String(), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['amount_unit_id'], ['unit.id'], ),
    sa.ForeignKeyConstraint(['diet_id'], ['diet.id'], ),
    sa.ForeignKeyConstraint(['digestible_energy_unit_id'], ['unit.id'], ),
    sa.ForeignKeyConstraint(['gross_energy_unit_id'], ['unit.id'], ),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredient.id'], ),
    sa.ForeignKeyConstraint(['metabolizable_energy_unit_id'], ['unit.id'], ),
    sa.ForeignKeyConstraint(['net_energy_unit_id'], ['unit.id'], ),
    sa.ForeignKeyConstraint(['nutrient_id'], ['nutrient.id'], ),
    sa.PrimaryKeyConstraint('diet_id', 'version', 'ingredient_id', 'nutrient_id')
    )
    op.create_index(op.f('ix_dietingredientnutrientoutput_archived'), 'dietingredientnutrientoutput', ['archived'], unique=False)
    op.add_column('dietingredientoutput', sa.Column('amount_unit_id', sa.String(), nullable=False))
    op.add_column('dietingredientoutput', sa.Column('cost', sa.Float(), nullable=True))
    op.add_column('dietingredientoutput', sa.Column('cost_unit_id', sa.String(), nullable=True))
    op.drop_constraint('dietingredientoutput_unit_id_fkey', 'dietingredientoutput', type_='foreignkey')
    op.create_foreign_key(None, 'dietingredientoutput', 'unit', ['amount_unit_id'], ['id'])
    op.create_foreign_key(None, 'dietingredientoutput', 'unit', ['cost_unit_id'], ['id'])
    op.drop_column('dietingredientoutput', 'unit_id')
    op.add_column('dietoutputversion', sa.Column('status', sa.String(), nullable=False))
    op.create_index(op.f('ix_dietoutputversion_status'), 'dietoutputversion', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_dietoutputversion_status'), table_name='dietoutputversion')
    op.drop_column('dietoutputversion', 'status')
    op.add_column('dietingredientoutput', sa.Column('unit_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'dietingredientoutput', type_='foreignkey')
    op.drop_constraint(None, 'dietingredientoutput', type_='foreignkey')
    op.create_foreign_key('dietingredientoutput_unit_id_fkey', 'dietingredientoutput', 'unit', ['unit_id'], ['id'])
    op.drop_column('dietingredientoutput', 'cost_unit_id')
    op.drop_column('dietingredientoutput', 'cost')
    op.drop_column('dietingredientoutput', 'amount_unit_id')
    op.drop_index(op.f('ix_dietingredientnutrientoutput_archived'), table_name='dietingredientnutrientoutput')
    op.drop_table('dietingredientnutrientoutput')
    op.drop_index(op.f('ix_dietsummaryoutput_archived'), table_name='dietsummaryoutput')
    op.drop_table('dietsummaryoutput')
    # ### end Alembic commands ###
